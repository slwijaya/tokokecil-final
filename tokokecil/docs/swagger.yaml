basePath: /
definitions:
  dto.ErrorResponse:
    properties:
      code:
        type: string
      details: {}
      message:
        type: string
      status:
        type: integer
    type: object
  dto.LoginRequest:
    properties:
      email:
        example: budi@example.com
        type: string
      password:
        example: "123456"
        type: string
    type: object
  dto.LoginResponse:
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
  dto.ProductRequest:
    properties:
      name:
        example: Kopi Gayo
        type: string
      price:
        example: 25000
        type: number
    type: object
  dto.ProductResponse:
    properties:
      name:
        example: Kopi Gayo
        type: string
      price:
        example: 25000
        type: number
    type: object
  dto.RegisterRequest:
    properties:
      email:
        example: budi@example.com
        type: string
      name:
        example: Budi
        type: string
      password:
        example: "123456"
        type: string
    type: object
  dto.UserResponse:
    properties:
      email:
        example: budi@example.com
        type: string
      id:
        example: 1
        type: integer
      name:
        example: Budi
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@tokokecil.local
    name: Tokokecil Support
    url: http://tokokecil.support.local
  description: API untuk aplikasi Tokokecil, sudah SOLID & Logrus-Ready
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Tokokecil API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Autentikasi user dan kembalikan JWT token
      parameters:
      - description: Login Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Login User
      tags:
      - Auth
  /products:
    get:
      description: Mendapatkan daftar seluruh produk (hanya untuk user yang sudah
        login/JWT protected)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ProductResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get All Products
      tags:
      - Product
    post:
      consumes:
      - application/json
      description: Menambahkan produk baru (butuh login/JWT)
      parameters:
      - description: Product Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.ProductRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.ProductResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create Product
      tags:
      - Product
  /register:
    post:
      consumes:
      - application/json
      description: Register user baru ke aplikasi Tokokecil
      parameters:
      - description: Register Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Register User
      tags:
      - Auth
  /users:
    get:
      description: Mendapatkan semua data user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.UserResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Get All Users
      tags:
      - User
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
